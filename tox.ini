[tox]
envlist =
    ruff
    pylint
    py39-sphinx{73,74}
    py{310,311,312,313,314}-sphinx{73,74,80,81}
    py{311,312,313,314}-sphinx{82}
    mypy

[testenv]
deps =
    -r{toxinidir}/requirements_dev.txt
    sphinx73: sphinx>=7.3,<7.4
    sphinx74: sphinx>=7.4,<7.5
    sphinx80: sphinx>=8.0,<8.1
    sphinx81: sphinx>=8.1,<8.2
    sphinx82: sphinx>=8.2,<8.3
commands =
    {envpython} -m tests {posargs}
setenv =
    PYTHONDONTWRITEBYTECODE=1
usedevelop = true

[testenv:coverage]
deps =
    coverage
    {[testenv]deps}
commands =
    {envpython} -m coverage run --module tests {posargs}
    - {envpython} -m coverage combine
    {envpython} -m coverage html
    {envpython} -m coverage report

[testenv:{,py311-,py312-,py313-,py314-}develop]
deps =
    {[testenv]deps}
    git+https://github.com/sphinx-doc/sphinx.git@{env:SPHINX_VER:master}
pip_pre = true

[testenv:{,py39-,py310-,py311-,py312-,py313-,py314-}interactive]
commands =
    {envpython} -m sphinxcontrib.confluencebuilder {posargs}
passenv = *

[testenv:{,py39-,py310-,py311-,py312-,py313-,py314-}prerelease]
pip_pre = true

[testenv:{,py39-,py310-,py311-,py312-,py313-,py314-}release]
usedevelop = false

[testenv:doc-html]
changedir = doc
commands = {envpython} -m sphinx -M html . _build -E -a

[testenv:doc-latexpdf]
changedir = doc
commands = {envpython} -m sphinx -M latexpdf . _build -E -a

[testenv:doc-spelling]
deps =
    {[testenv]deps}
    sphinxcontrib-spelling
changedir = doc
commands = {envpython} -m sphinx -M spelling . _build -E -a

[testenv:pylint]
deps =
    {[testenv]deps}
    pylint: pylint==3.3.8
commands =
    pylint \
    sphinxcontrib \
    tests

[testenv:ruff]
deps =
    {[testenv]deps}
    ruff: ruff==0.12.12
setenv =
    {[testenv]setenv}
    RUFF_CACHE_DIR={toxworkdir}/.ruff_cache
commands =
    ruff \
    check \
    doc/conf.py \
    sphinxcontrib \
    tests

[testenv:mypy]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements_types.txt
    mypy: mypy==1.17.1
commands =
    mypy \
    --explicit-package-bases \
    sphinxcontrib

[testenv:{,py39-,py310-,py311-,py312-,py313-,py314-}sandbox]
deps =
    -r{toxinidir}/sandbox/requirements.txt
commands =
    {envpython} -m tests.test_sandbox {posargs}
passenv = *

[testenv:{,py39-,py310-,py311-,py312-,py313-,py314-}validation]
deps =
    {[testenv]deps}
    -r{toxinidir}/tests/validation-sets/requirements.txt
commands =
    {envpython} -m tests.test_validation {posargs}
passenv = *

[testenv:{,py39-,py310-,py311-,py312-,py313-,py314-}validation-prerelease]
base = validation
pip_pre = true
